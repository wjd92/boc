{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/about/me.jpg","path":"about/me.jpg","modified":1,"renderable":0},{"_id":"source/images/luffy.jpeg","path":"images/luffy.jpeg","modified":1,"renderable":0},{"_id":"source/images/tree.png","path":"images/tree.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/_posts/Dbscan.md","hash":"0feb1908bc24679aedf6be0c001c58dcaf5cd615","modified":1652024338540},{"_id":"source/_posts/PageRank.md","hash":"34ec6a979e4e61dcddbf52b1a46b47a19e52f2fa","modified":1652028577694},{"_id":"source/tags/index.md","hash":"dd2b115a70e0704857856e375d888526a6d643bc","modified":1650967778921},{"_id":"source/_posts/IsolationTree.md","hash":"f40de274224cb907d18c10b37ece26beeb5a2067","modified":1652024372109},{"_id":"source/CNAME","hash":"215b8f9388cfd3e9643bd739a98e9821d0512101","modified":1650816910949},{"_id":"source/.DS_Store","hash":"7e0e1cc850b7d58923c9ea12a0c908c5c77f7463","modified":1650722295649},{"_id":"source/categories/index.md","hash":"8e7a24bd9e287065792222330e29536ae14dd94c","modified":1650967721443},{"_id":"source/about/index.md","hash":"0b6084bcbf0f5ac58fcdd2979a58d41c61282bc0","modified":1651943669854},{"_id":"source/images/.DS_Store","hash":"82f22c361789de56dc09e6d596d37b76009ade1f","modified":1650723558697},{"_id":"source/images/luffy.jpeg","hash":"662b7f753206d9c3d48698ee590da883e988d045","modified":1650721628618},{"_id":"source/images/tree.png","hash":"562e0918a8ed0f3f2138ef904ac0da888e85b233","modified":1650707259327},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1650965126664},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1650965126661},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1650965126664},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1650965126660},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1650965126661},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1650965126665},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1650965126665},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1650965126665},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1650965126666},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1650965126693},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1650965126661},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1650965126662},{"_id":"themes/next/_config.yml","hash":"c0ac855dc57bdfcd6dd2820430acb7815f8bb44e","modified":1651930826359},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1650965126662},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1650965126663},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1650965126670},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1650965126663},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1650965126663},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1650965126663},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1650965126663},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1650965126664},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1650965126663},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1650965126664},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1650965126666},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1650965126666},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1650965126666},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1650965126667},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1650965126667},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1650965126667},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1650965126699},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1650965126667},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1650965126667},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1650965126667},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1650965126692},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1650965126692},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1650965126692},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1650965126692},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1650965126692},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1650965126676},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1650965126693},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1650965126670},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1650965126671},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1650965126671},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1650965126671},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1650965126671},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1650965126671},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1650965126672},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1650965126672},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1650965126672},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1650965126672},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1650965126673},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1650965126673},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1650965126672},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1650965126673},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1650965126673},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1650965126674},{"_id":"themes/next/languages/tr.yml","hash":"2b041eeb8bd096f549464f191cfc1ea0181daca4","modified":1650965126674},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1650965126674},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1650965126675},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1650965126675},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1650965126675},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1650965126675},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1650965126662},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1650965126662},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1650965126662},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1650965126662},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1650965126668},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1650965126668},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1650965126668},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1650965126668},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1650965126668},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1650965126668},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1650965126669},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1650965126669},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1650965126669},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1650965126669},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1650965126693},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1650965126696},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1650965126696},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1650965126696},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1650965126669},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1650965126670},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1650965126697},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1650965126697},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1650965126697},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1650965126698},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1650965126670},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1650965126698},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1650965126699},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1650965126700},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1650965126700},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1650965126700},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1650965126700},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1650965126700},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1650965126701},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1650965126701},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1650965126701},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1650965126702},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1650965126702},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1650965126677},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1650965126676},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1650965126677},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1650965126677},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1650965126679},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1650965126680},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4369b313cbbeae742cb35f86d23d99d4285f7359","modified":1650965126677},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1650965126688},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1650965126689},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1650965126689},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1650965126683},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1650965126683},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1650965126686},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1650965126683},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1650965126684},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1650965126702},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1650965126685},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1650965126717},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1650965126685},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1650965126729},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1650965126725},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1650965126729},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1650965126729},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1650965126730},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1650965126729},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1650965126730},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1650965126726},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1650965126731},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1650965126727},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1650965126725},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1650965126726},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1650965126727},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1650965126727},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1650965126727},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1650965126726},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1650965126727},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1650965126728},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1650965126694},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1650965126694},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1650965126694},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1650965126728},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1650965126728},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1650965126694},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1650965126728},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1650965126695},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1650965126695},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1650965126695},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1650965126695},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1650965126695},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1650965126696},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1650965126696},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1650965126680},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1650965126678},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1650965126678},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1650965126680},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1650965126678},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1650965126678},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1650965126679},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1650965126679},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1650965126679},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1650965126680},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1650965126681},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1650965126681},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1650965126681},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1650965126681},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1650965126682},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1650965126682},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1650965126682},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1650965126682},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1650965126685},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1650965126686},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1650965126686},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1650965126686},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1650965126687},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1650965126687},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1650965126687},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1650965126687},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1650965126688},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1650965126688},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1650965126687},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1650965126688},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1650965126689},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1650965126688},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1650965126690},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1650965126689},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1650965126690},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1650965126691},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1650965126691},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1650965126691},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1650965126689},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1650965126690},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1650965126690},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1650965126691},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1650965126691},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1650965126684},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1650965126683},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1650965126684},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1650965126685},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1650965126724},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1650965126684},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1650965126724},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1650965126724},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1650965126725},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1650965126725},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1650965126730},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1650965126730},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1650965126703},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1650965126703},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1650965126703},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1650965126734},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1650965126734},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1650965126707},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1650965126713},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1650965126713},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1650965126714},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1650965126715},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1650965126715},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1650965126715},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1650965126715},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1650965126717},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1650965126719},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1650965126719},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1650965126719},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1650965126721},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1650965126720},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1650965126720},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1650965126721},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1650965126720},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1650965126721},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1650965126721},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1650965126722},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1650965126722},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1650965126722},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1650965126722},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1650965126723},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1650965126723},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1650965126723},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1650965126724},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1650965126710},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1650965126711},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1650965126733},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1650965126732},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1650965126703},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1650965126704},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1650965126704},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1650965126704},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1650965126704},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1650965126707},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1650965126708},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1650965126708},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1650965126708},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1650965126708},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1650965126705},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1650965126705},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1650965126705},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1650965126705},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1650965126705},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1650965126706},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1650965126706},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1650965126706},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1650965126706},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1650965126707},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1650965126706},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1650965126707},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1650965126714},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1650965126714},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1650965126707},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1650965126714},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1650965126716},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1650965126715},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1650965126716},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1650965126716},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1650965126717},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1650965126716},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1650965126716},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1650965126717},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1650965126709},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1650965126709},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1650965126709},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1650965126709},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1650965126709},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1650965126710},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1650965126710},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1650965126710},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1650965126711},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1650965126711},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1650965126711},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1650965126711},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1650965126712},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1650965126712},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1650965126712},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1650965126712},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1650965126712},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1650965126713},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1650965126732},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1650965126733},{"_id":"source/about/me.jpg","hash":"599b7afe77706437dc7c7e0cae47ed1c62cb9a9f","modified":1650721075605},{"_id":"public/atom.xml","hash":"a143711adeb4427936af44910688553ae36ec1aa","modified":1652028588216},{"_id":"public/search.xml","hash":"1a19c19402748227bee8e0a3199cb4474e761a1a","modified":1652028588216},{"_id":"public/tags/index.html","hash":"d0ff4f340215d13b8864f308f07f1e6bd47e261d","modified":1652028588216},{"_id":"public/about/index.html","hash":"9f41d57f8da5bb8cb87699ec3419e5c091eb2f85","modified":1652028588216},{"_id":"public/categories/index.html","hash":"1ca68979c43c7dab7b20cb3c488fc344b8405c93","modified":1652028588216},{"_id":"public/2020/12/08/PageRank/index.html","hash":"5c340697c03b3f1f47ec1205703e9aab23608c81","modified":1652028588216},{"_id":"public/2020/05/25/IsolationTree/index.html","hash":"6556b09b02a1a63748ba02777340f1718e8751f2","modified":1652028588216},{"_id":"public/2018/09/25/Dbscan/index.html","hash":"7a30e785cd030a63a15295f3c8448ab106710538","modified":1652028588216},{"_id":"public/archives/2018/index.html","hash":"e2beb01e9f928567e14de5945fefdac3153dcdc3","modified":1652028588216},{"_id":"public/archives/index.html","hash":"2b30994b053f3c2fbbddcdf7257577c86e0d4747","modified":1652028588216},{"_id":"public/archives/2018/09/index.html","hash":"776f2bd5c992598101ba48f563e13dc0f35c7e29","modified":1652028588216},{"_id":"public/archives/2020/index.html","hash":"4dc876da22955852768878366593a7f440fe0f8e","modified":1652028588216},{"_id":"public/archives/2020/12/index.html","hash":"4c09eb5d8c32738231dd48a03d2ed4997533aca5","modified":1652028588216},{"_id":"public/archives/2020/05/index.html","hash":"5d07bf8f7561bd5f40d938002faa4ec8da281f4e","modified":1652028588216},{"_id":"public/categories/异常检测/index.html","hash":"d8499cb883ccb0c9e1017afb0d56c18a2c85ab68","modified":1652028588216},{"_id":"public/categories/机器学习/index.html","hash":"8fc7d21b2d23ec09498bcf500f452d76d59cc1d8","modified":1652028588216},{"_id":"public/categories/根因定位/index.html","hash":"00d51124036ba1e10fddbcba76a333b431c235b7","modified":1652028588216},{"_id":"public/index.html","hash":"0ebe3d146dffa8fb8f5afaa5a3a17781f6e1dc27","modified":1652028588216},{"_id":"public/tags/异常检测/index.html","hash":"287f6925aa4cdfd32b478993b7309413bbbe302f","modified":1652028588216},{"_id":"public/tags/聚类/index.html","hash":"a2d6eeaf6f16e31dd1ca85f6ef3420b074787e35","modified":1652028588216},{"_id":"public/tags/排序/index.html","hash":"167f8f18893b9771e718690a20cd3634af230050","modified":1652028588216},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1652028588216},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1652028588216},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1652028588216},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1652028588216},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1652028588216},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1652028588216},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1652028588216},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1652028588216},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1652028588216},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1652028588216},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1652028588216},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1652028588216},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1652028588216},{"_id":"public/CNAME","hash":"215b8f9388cfd3e9643bd739a98e9821d0512101","modified":1652028588216},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1652028588216},{"_id":"public/images/luffy.jpeg","hash":"662b7f753206d9c3d48698ee590da883e988d045","modified":1652028588216},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1652028588216},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1652028588216},{"_id":"public/css/main.css","hash":"b10f0a19af40f1397ec2a74648093d967997ae48","modified":1652028588216},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1652028588216},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1652028588216},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1652028588216},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1652028588216},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1652028588216},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1652028588216},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1652028588216},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1652028588216},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1652028588216},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1652028588216},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1652028588216},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1652028588216},{"_id":"public/images/tree.png","hash":"562e0918a8ed0f3f2138ef904ac0da888e85b233","modified":1652028588216},{"_id":"public/about/me.jpg","hash":"599b7afe77706437dc7c7e0cae47ed1c62cb9a9f","modified":1652028588216}],"Category":[{"name":"异常检测","_id":"cl2xj61ep000298ud0oqz0vsn"},{"name":"机器学习","_id":"cl2xj61et000a98udbr7gcbvj"},{"name":"根因定位","_id":"cl2xj61eu000c98ud1gtmc0th"}],"Data":[],"Page":[{"title":"标签","date":"2017-10-25T14:00:00.000Z","layout":"tags","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2017-10-25 22:00:00\nlayout: \"tags\"\ntype: \"tags\"\n---","updated":"2022-04-26T10:09:38.921Z","path":"tags/index.html","comments":1,"_id":"cl2xj61ej000098ud2ytkg1bc","content":"\n","site":{"data":{}},"excerpt":"","more":"\n"},{"title":"about","date":"2017-02-23T02:00:00.000Z","layout":"about","_content":"#### 教育经历\n硕士：关山口男子技校\n\n本科：左家垅男子技校\n\n#### 工作领域\n`时序异常检测` `故障根因定位` `关联分析` `时序预测`\n\n#### 技能\n`Python` `Java` `机器学习`\n\n\n### 兴趣爱好\n`户外` `动漫` `推理爱好者`\n\n### 联系方式\nWeChat：AckermanAni\n\nEmail：954029292@qq.com\n\nGithub：[wjd92](https://github.com/wjd92)\n\n### 工作相关\n\n- [AIOps在美团的实践--故障发现篇(美团2020年度最受欢迎技术博客)](https://tech.meituan.com/2020/10/15/mt-aiops-horae.html)","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-02-23 10:00:00\nlayout: about\n---\n#### 教育经历\n硕士：关山口男子技校\n\n本科：左家垅男子技校\n\n#### 工作领域\n`时序异常检测` `故障根因定位` `关联分析` `时序预测`\n\n#### 技能\n`Python` `Java` `机器学习`\n\n\n### 兴趣爱好\n`户外` `动漫` `推理爱好者`\n\n### 联系方式\nWeChat：AckermanAni\n\nEmail：954029292@qq.com\n\nGithub：[wjd92](https://github.com/wjd92)\n\n### 工作相关\n\n- [AIOps在美团的实践--故障发现篇(美团2020年度最受欢迎技术博客)](https://tech.meituan.com/2020/10/15/mt-aiops-horae.html)","updated":"2022-05-07T17:14:29.854Z","path":"about/index.html","comments":1,"_id":"cl2xj61es000798udfn9c2fr0","content":"<h4 id=\"教育经历\">教育经历</h4>\n<p>硕士：关山口男子技校</p>\n<p>本科：左家垅男子技校</p>\n<h4 id=\"工作领域\">工作领域</h4>\n<p><code>时序异常检测</code> <code>故障根因定位</code>\n<code>关联分析</code> <code>时序预测</code></p>\n<h4 id=\"技能\">技能</h4>\n<p><code>Python</code> <code>Java</code> <code>机器学习</code></p>\n<h3 id=\"兴趣爱好\">兴趣爱好</h3>\n<p><code>户外</code> <code>动漫</code> <code>推理爱好者</code></p>\n<h3 id=\"联系方式\">联系方式</h3>\n<p>WeChat：AckermanAni</p>\n<p>Email：954029292@qq.com</p>\n<p>Github：<a href=\"https://github.com/wjd92\">wjd92</a></p>\n<h3 id=\"工作相关\">工作相关</h3>\n<ul>\n<li><a\nhref=\"https://tech.meituan.com/2020/10/15/mt-aiops-horae.html\">AIOps在美团的实践--故障发现篇(美团2020年度最受欢迎技术博客)</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"教育经历\">教育经历</h4>\n<p>硕士：关山口男子技校</p>\n<p>本科：左家垅男子技校</p>\n<h4 id=\"工作领域\">工作领域</h4>\n<p><code>时序异常检测</code> <code>故障根因定位</code>\n<code>关联分析</code> <code>时序预测</code></p>\n<h4 id=\"技能\">技能</h4>\n<p><code>Python</code> <code>Java</code> <code>机器学习</code></p>\n<h3 id=\"兴趣爱好\">兴趣爱好</h3>\n<p><code>户外</code> <code>动漫</code> <code>推理爱好者</code></p>\n<h3 id=\"联系方式\">联系方式</h3>\n<p>WeChat：AckermanAni</p>\n<p>Email：954029292@qq.com</p>\n<p>Github：<a href=\"https://github.com/wjd92\">wjd92</a></p>\n<h3 id=\"工作相关\">工作相关</h3>\n<ul>\n<li><a\nhref=\"https://tech.meituan.com/2020/10/15/mt-aiops-horae.html\">AIOps在美团的实践--故障发现篇(美团2020年度最受欢迎技术博客)</a></li>\n</ul>\n"},{"title":"分类","date":"2017-10-25T14:00:00.000Z","layout":"categories","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-10-25 22:00:00\nlayout: \"categories\"\ntype: \"categories\"\n---","updated":"2022-04-26T10:08:41.443Z","path":"categories/index.html","comments":1,"_id":"cl2xj61et000998ud3csna3ll","content":"\n","site":{"data":{}},"excerpt":"","more":"\n"}],"Post":[{"title":"孤立森林原理详解","date":"2020-05-25T03:33:00.000Z","mathjax":true,"top":9999,"_content":"  \n![](https://images.bumpchicken.cn/img/tree.png)\n\n孤立森林（Isolation Forest）是周志华团队于2008年提出的一种具有线性复杂度的异常检测算法，被工业界广泛应用于诸如异常流量检测,金融欺诈行为检测等场景。\n\n<!--more-->\n\n## 算法原理\n异常检测领域，通常是正常的样本占大多数，离群点占绝少数，因此大多数异常检测算法的基本思想都是对正常点构建模型，然后根据规则识别出不属于正常点模型的离群点，比较典型的算法有One Class SVM(OCSVM), Local Outlier Factor(LOF)。和多数异常检测算法不同，孤立森林采用了一种较为高效的异常发现算法，其思路很朴素，但也足够直观有效。\n\n考虑以下场景，一个二维平面上零零散散分布着一些点，随机使用分割线对其进行分割，直至所有但点都不可再划分（即被孤立了）。直观上来讲，可以发现那些密度很高的簇需要被切割很多次才会停止切割，但是密度很低的点很快就会停止切割到某个子空间了。\n\n<img src=\"https://images.bumpchicken.cn/img/20220424235501.png\" width=\"90%\" height=\"50%\">\n\n\n孤立森林分<b>训练</b>和<b>异常评估</b>两部分:\n\n- <b>训练:</b> 根据样本抽样构建多棵iTree，形成孤立森林\n- <b>异常评估:</b> 根据训练过程构建的孤立森林，计算待评估值的异常得分\n\n## 训练\n1. 给定训练数据集$X$，确定需要构建的孤立树（iTree）个数t，按$\\phi$采样大小随机取样作为子样本集$X^{'}$\n2. 在子样本集$X^{'}$上构建一棵孤立树(iTree)，过程如下图所示：\n\n<img src=\"https://images.bumpchicken.cn/img/20220508001729.png\" width=\"80%\" height=\"20%\">\n\na) 在$X$中随机选择一个属性（维度），在当前样本数据范围内，随机产生一个分割点$p$(介于当前维度最大和最小值之间)\n\nb) 此切割点即是一个超平面，将当前节点数据空间切分成2个子空间：将当前所选维度下小于p点的放在当前节点左分支，把大于p点的放在当前节点的右分支\n\nc) 在节点的左分支和右分支递归执行步骤a，b，不断构造新的叶子节点，直到叶子节点上只有一个数据或者树已经生长到了限制的高度\n\nd) 单棵iTree构建完成\n\n3. 按2的过程，依次构建t棵iTree，得到孤立森林\n\n<img src=\"https://images.bumpchicken.cn/img/20220508003153.png\" width=\"80%\" height=\"30%\">\n\n\n## 异常评估\n\n构建了孤立森林(IForest)后，可以评估某个点$x$的异常得分，用到如下公式:\n\n$$s(x,n)=2^{-\\frac{E(h(x))}{c(n}} $$\n\n其中，$h(x)$ 表示$x$在某棵孤立树中的路径长度，$E(h(x))$ 表示在所有孤立树中的期望路径长度。$c(n)$ 为样本数为n时的二叉排序树(BST)的平均搜索路径长度，用来对样本$x$的期望路径长度做归一化处理。$c(n)$公式如下:\n\n$$c(n)=2H(n-1)-(2(n-1)/n)$$\n\n其中，$H(i)$是一个调和数，约等于 $ln(i) + \\gamma$，$\\gamma$为欧拉常数，约等于0.5772156649\n\n\n论文对于异常得分分布有如下结论：\n\n1. 如果异常得分接近1，那么一定是异常点\n\n2. 如果异常得分远小于0.5, 那么一定不是异常点\n\n3. 如果样本点的异常得分均在0.5左右，那么样本中可能不存在异常点\n\n异常得分$s$和$E(h(x))$关系图如下所示\n\n<img src=\"https://images.bumpchicken.cn/img/20220508010609.png\" width=\"50%\" height=\"30%\">\n\n\n异常得分的等高线图如下所示，通常潜在的异常点$s>=0.6$\n<img src=\"http://images.bumpchicken.cn/img/20220508010909.png\" width=\"50%\" height=\"30%\">\n\n## 参考资料\n\n1.Liu F T, Ting K M, Zhou Z H. Isolation forest[C]//2008 Eighth IEEE International Conference on Data Mining. IEEE, 2008: 413-422.\n","source":"_posts/IsolationTree.md","raw":"\ntitle: 孤立森林原理详解\n\ndate: 2020-05-25 11:33:00\n\ntags: \n  - 异常检测\n\ncategories:\n  - 异常检测\n\nmathjax: true\n\ntop: 9999\n\n---\n  \n![](https://images.bumpchicken.cn/img/tree.png)\n\n孤立森林（Isolation Forest）是周志华团队于2008年提出的一种具有线性复杂度的异常检测算法，被工业界广泛应用于诸如异常流量检测,金融欺诈行为检测等场景。\n\n<!--more-->\n\n## 算法原理\n异常检测领域，通常是正常的样本占大多数，离群点占绝少数，因此大多数异常检测算法的基本思想都是对正常点构建模型，然后根据规则识别出不属于正常点模型的离群点，比较典型的算法有One Class SVM(OCSVM), Local Outlier Factor(LOF)。和多数异常检测算法不同，孤立森林采用了一种较为高效的异常发现算法，其思路很朴素，但也足够直观有效。\n\n考虑以下场景，一个二维平面上零零散散分布着一些点，随机使用分割线对其进行分割，直至所有但点都不可再划分（即被孤立了）。直观上来讲，可以发现那些密度很高的簇需要被切割很多次才会停止切割，但是密度很低的点很快就会停止切割到某个子空间了。\n\n<img src=\"https://images.bumpchicken.cn/img/20220424235501.png\" width=\"90%\" height=\"50%\">\n\n\n孤立森林分<b>训练</b>和<b>异常评估</b>两部分:\n\n- <b>训练:</b> 根据样本抽样构建多棵iTree，形成孤立森林\n- <b>异常评估:</b> 根据训练过程构建的孤立森林，计算待评估值的异常得分\n\n## 训练\n1. 给定训练数据集$X$，确定需要构建的孤立树（iTree）个数t，按$\\phi$采样大小随机取样作为子样本集$X^{'}$\n2. 在子样本集$X^{'}$上构建一棵孤立树(iTree)，过程如下图所示：\n\n<img src=\"https://images.bumpchicken.cn/img/20220508001729.png\" width=\"80%\" height=\"20%\">\n\na) 在$X$中随机选择一个属性（维度），在当前样本数据范围内，随机产生一个分割点$p$(介于当前维度最大和最小值之间)\n\nb) 此切割点即是一个超平面，将当前节点数据空间切分成2个子空间：将当前所选维度下小于p点的放在当前节点左分支，把大于p点的放在当前节点的右分支\n\nc) 在节点的左分支和右分支递归执行步骤a，b，不断构造新的叶子节点，直到叶子节点上只有一个数据或者树已经生长到了限制的高度\n\nd) 单棵iTree构建完成\n\n3. 按2的过程，依次构建t棵iTree，得到孤立森林\n\n<img src=\"https://images.bumpchicken.cn/img/20220508003153.png\" width=\"80%\" height=\"30%\">\n\n\n## 异常评估\n\n构建了孤立森林(IForest)后，可以评估某个点$x$的异常得分，用到如下公式:\n\n$$s(x,n)=2^{-\\frac{E(h(x))}{c(n}} $$\n\n其中，$h(x)$ 表示$x$在某棵孤立树中的路径长度，$E(h(x))$ 表示在所有孤立树中的期望路径长度。$c(n)$ 为样本数为n时的二叉排序树(BST)的平均搜索路径长度，用来对样本$x$的期望路径长度做归一化处理。$c(n)$公式如下:\n\n$$c(n)=2H(n-1)-(2(n-1)/n)$$\n\n其中，$H(i)$是一个调和数，约等于 $ln(i) + \\gamma$，$\\gamma$为欧拉常数，约等于0.5772156649\n\n\n论文对于异常得分分布有如下结论：\n\n1. 如果异常得分接近1，那么一定是异常点\n\n2. 如果异常得分远小于0.5, 那么一定不是异常点\n\n3. 如果样本点的异常得分均在0.5左右，那么样本中可能不存在异常点\n\n异常得分$s$和$E(h(x))$关系图如下所示\n\n<img src=\"https://images.bumpchicken.cn/img/20220508010609.png\" width=\"50%\" height=\"30%\">\n\n\n异常得分的等高线图如下所示，通常潜在的异常点$s>=0.6$\n<img src=\"http://images.bumpchicken.cn/img/20220508010909.png\" width=\"50%\" height=\"30%\">\n\n## 参考资料\n\n1.Liu F T, Ting K M, Zhou Z H. Isolation forest[C]//2008 Eighth IEEE International Conference on Data Mining. IEEE, 2008: 413-422.\n","slug":"IsolationTree","published":1,"updated":"2022-05-08T15:39:32.109Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2xj61em000198udb6uheb43","content":"<p><img src=\"https://images.bumpchicken.cn/img/tree.png\" /></p>\n<p>孤立森林（Isolation\nForest）是周志华团队于2008年提出的一种具有线性复杂度的异常检测算法，被工业界广泛应用于诸如异常流量检测,金融欺诈行为检测等场景。</p>\n<span id=\"more\"></span>\n<h2 id=\"算法原理\">算法原理</h2>\n<p>异常检测领域，通常是正常的样本占大多数，离群点占绝少数，因此大多数异常检测算法的基本思想都是对正常点构建模型，然后根据规则识别出不属于正常点模型的离群点，比较典型的算法有One\nClass SVM(OCSVM), Local Outlier\nFactor(LOF)。和多数异常检测算法不同，孤立森林采用了一种较为高效的异常发现算法，其思路很朴素，但也足够直观有效。</p>\n<p>考虑以下场景，一个二维平面上零零散散分布着一些点，随机使用分割线对其进行分割，直至所有但点都不可再划分（即被孤立了）。直观上来讲，可以发现那些密度很高的簇需要被切割很多次才会停止切割，但是密度很低的点很快就会停止切割到某个子空间了。</p>\n<p><img src=\"https://images.bumpchicken.cn/img/20220424235501.png\" width=\"90%\" height=\"50%\"></p>\n<p>孤立森林分<b>训练</b>和<b>异常评估</b>两部分:</p>\n<ul>\n<li><b>训练:</b> 根据样本抽样构建多棵iTree，形成孤立森林</li>\n<li><b>异常评估:</b>\n根据训练过程构建的孤立森林，计算待评估值的异常得分</li>\n</ul>\n<h2 id=\"训练\">训练</h2>\n<ol type=\"1\">\n<li>给定训练数据集<span\nclass=\"math inline\">\\(X\\)</span>，确定需要构建的孤立树（iTree）个数t，按<span\nclass=\"math inline\">\\(\\phi\\)</span>采样大小随机取样作为子样本集<span\nclass=\"math inline\">\\(X^{&#39;}\\)</span></li>\n<li>在子样本集<span\nclass=\"math inline\">\\(X^{&#39;}\\)</span>上构建一棵孤立树(iTree)，过程如下图所示：</li>\n</ol>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508001729.png\" width=\"80%\" height=\"20%\"></p>\n<ol type=\"a\">\n<li><p>在<span\nclass=\"math inline\">\\(X\\)</span>中随机选择一个属性（维度），在当前样本数据范围内，随机产生一个分割点<span\nclass=\"math inline\">\\(p\\)</span>(介于当前维度最大和最小值之间)</p></li>\n<li><p>此切割点即是一个超平面，将当前节点数据空间切分成2个子空间：将当前所选维度下小于p点的放在当前节点左分支，把大于p点的放在当前节点的右分支</p></li>\n<li><p>在节点的左分支和右分支递归执行步骤a，b，不断构造新的叶子节点，直到叶子节点上只有一个数据或者树已经生长到了限制的高度</p></li>\n<li><p>单棵iTree构建完成</p></li>\n</ol>\n<ol start=\"3\" type=\"1\">\n<li>按2的过程，依次构建t棵iTree，得到孤立森林</li>\n</ol>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508003153.png\" width=\"80%\" height=\"30%\"></p>\n<h2 id=\"异常评估\">异常评估</h2>\n<p>构建了孤立森林(IForest)后，可以评估某个点<span\nclass=\"math inline\">\\(x\\)</span>的异常得分，用到如下公式:</p>\n<p><span class=\"math display\">\\[s(x,n)=2^{-\\frac{E(h(x))}{c(n}}\n\\]</span></p>\n<p>其中，<span class=\"math inline\">\\(h(x)\\)</span> 表示<span\nclass=\"math inline\">\\(x\\)</span>在某棵孤立树中的路径长度，<span\nclass=\"math inline\">\\(E(h(x))\\)</span>\n表示在所有孤立树中的期望路径长度。<span\nclass=\"math inline\">\\(c(n)\\)</span>\n为样本数为n时的二叉排序树(BST)的平均搜索路径长度，用来对样本<span\nclass=\"math inline\">\\(x\\)</span>的期望路径长度做归一化处理。<span\nclass=\"math inline\">\\(c(n)\\)</span>公式如下:</p>\n<p><span class=\"math display\">\\[c(n)=2H(n-1)-(2(n-1)/n)\\]</span></p>\n<p>其中，<span class=\"math inline\">\\(H(i)\\)</span>是一个调和数，约等于\n<span class=\"math inline\">\\(ln(i) + \\gamma\\)</span>，<span\nclass=\"math inline\">\\(\\gamma\\)</span>为欧拉常数，约等于0.5772156649</p>\n<p>论文对于异常得分分布有如下结论：</p>\n<ol type=\"1\">\n<li><p>如果异常得分接近1，那么一定是异常点</p></li>\n<li><p>如果异常得分远小于0.5, 那么一定不是异常点</p></li>\n<li><p>如果样本点的异常得分均在0.5左右，那么样本中可能不存在异常点</p></li>\n</ol>\n<p>异常得分<span class=\"math inline\">\\(s\\)</span>和<span\nclass=\"math inline\">\\(E(h(x))\\)</span>关系图如下所示</p>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508010609.png\" width=\"50%\" height=\"30%\"></p>\n<p>异常得分的等高线图如下所示，通常潜在的异常点<span\nclass=\"math inline\">\\(s&gt;=0.6\\)</span>\n<img src=\"http://images.bumpchicken.cn/img/20220508010909.png\" width=\"50%\" height=\"30%\"></p>\n<h2 id=\"参考资料\">参考资料</h2>\n<p>1.Liu F T, Ting K M, Zhou Z H. Isolation forest[C]//2008 Eighth IEEE\nInternational Conference on Data Mining. IEEE, 2008: 413-422.</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://images.bumpchicken.cn/img/tree.png\" /></p>\n<p>孤立森林（Isolation\nForest）是周志华团队于2008年提出的一种具有线性复杂度的异常检测算法，被工业界广泛应用于诸如异常流量检测,金融欺诈行为检测等场景。</p>","more":"<h2 id=\"算法原理\">算法原理</h2>\n<p>异常检测领域，通常是正常的样本占大多数，离群点占绝少数，因此大多数异常检测算法的基本思想都是对正常点构建模型，然后根据规则识别出不属于正常点模型的离群点，比较典型的算法有One\nClass SVM(OCSVM), Local Outlier\nFactor(LOF)。和多数异常检测算法不同，孤立森林采用了一种较为高效的异常发现算法，其思路很朴素，但也足够直观有效。</p>\n<p>考虑以下场景，一个二维平面上零零散散分布着一些点，随机使用分割线对其进行分割，直至所有但点都不可再划分（即被孤立了）。直观上来讲，可以发现那些密度很高的簇需要被切割很多次才会停止切割，但是密度很低的点很快就会停止切割到某个子空间了。</p>\n<p><img src=\"https://images.bumpchicken.cn/img/20220424235501.png\" width=\"90%\" height=\"50%\"></p>\n<p>孤立森林分<b>训练</b>和<b>异常评估</b>两部分:</p>\n<ul>\n<li><b>训练:</b> 根据样本抽样构建多棵iTree，形成孤立森林</li>\n<li><b>异常评估:</b>\n根据训练过程构建的孤立森林，计算待评估值的异常得分</li>\n</ul>\n<h2 id=\"训练\">训练</h2>\n<ol type=\"1\">\n<li>给定训练数据集<span\nclass=\"math inline\">\\(X\\)</span>，确定需要构建的孤立树（iTree）个数t，按<span\nclass=\"math inline\">\\(\\phi\\)</span>采样大小随机取样作为子样本集<span\nclass=\"math inline\">\\(X^{&#39;}\\)</span></li>\n<li>在子样本集<span\nclass=\"math inline\">\\(X^{&#39;}\\)</span>上构建一棵孤立树(iTree)，过程如下图所示：</li>\n</ol>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508001729.png\" width=\"80%\" height=\"20%\"></p>\n<ol type=\"a\">\n<li><p>在<span\nclass=\"math inline\">\\(X\\)</span>中随机选择一个属性（维度），在当前样本数据范围内，随机产生一个分割点<span\nclass=\"math inline\">\\(p\\)</span>(介于当前维度最大和最小值之间)</p></li>\n<li><p>此切割点即是一个超平面，将当前节点数据空间切分成2个子空间：将当前所选维度下小于p点的放在当前节点左分支，把大于p点的放在当前节点的右分支</p></li>\n<li><p>在节点的左分支和右分支递归执行步骤a，b，不断构造新的叶子节点，直到叶子节点上只有一个数据或者树已经生长到了限制的高度</p></li>\n<li><p>单棵iTree构建完成</p></li>\n</ol>\n<ol start=\"3\" type=\"1\">\n<li>按2的过程，依次构建t棵iTree，得到孤立森林</li>\n</ol>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508003153.png\" width=\"80%\" height=\"30%\"></p>\n<h2 id=\"异常评估\">异常评估</h2>\n<p>构建了孤立森林(IForest)后，可以评估某个点<span\nclass=\"math inline\">\\(x\\)</span>的异常得分，用到如下公式:</p>\n<p><span class=\"math display\">\\[s(x,n)=2^{-\\frac{E(h(x))}{c(n}}\n\\]</span></p>\n<p>其中，<span class=\"math inline\">\\(h(x)\\)</span> 表示<span\nclass=\"math inline\">\\(x\\)</span>在某棵孤立树中的路径长度，<span\nclass=\"math inline\">\\(E(h(x))\\)</span>\n表示在所有孤立树中的期望路径长度。<span\nclass=\"math inline\">\\(c(n)\\)</span>\n为样本数为n时的二叉排序树(BST)的平均搜索路径长度，用来对样本<span\nclass=\"math inline\">\\(x\\)</span>的期望路径长度做归一化处理。<span\nclass=\"math inline\">\\(c(n)\\)</span>公式如下:</p>\n<p><span class=\"math display\">\\[c(n)=2H(n-1)-(2(n-1)/n)\\]</span></p>\n<p>其中，<span class=\"math inline\">\\(H(i)\\)</span>是一个调和数，约等于\n<span class=\"math inline\">\\(ln(i) + \\gamma\\)</span>，<span\nclass=\"math inline\">\\(\\gamma\\)</span>为欧拉常数，约等于0.5772156649</p>\n<p>论文对于异常得分分布有如下结论：</p>\n<ol type=\"1\">\n<li><p>如果异常得分接近1，那么一定是异常点</p></li>\n<li><p>如果异常得分远小于0.5, 那么一定不是异常点</p></li>\n<li><p>如果样本点的异常得分均在0.5左右，那么样本中可能不存在异常点</p></li>\n</ol>\n<p>异常得分<span class=\"math inline\">\\(s\\)</span>和<span\nclass=\"math inline\">\\(E(h(x))\\)</span>关系图如下所示</p>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508010609.png\" width=\"50%\" height=\"30%\"></p>\n<p>异常得分的等高线图如下所示，通常潜在的异常点<span\nclass=\"math inline\">\\(s&gt;=0.6\\)</span>\n<img src=\"http://images.bumpchicken.cn/img/20220508010909.png\" width=\"50%\" height=\"30%\"></p>\n<h2 id=\"参考资料\">参考资料</h2>\n<p>1.Liu F T, Ting K M, Zhou Z H. Isolation forest[C]//2008 Eighth IEEE\nInternational Conference on Data Mining. IEEE, 2008: 413-422.</p>"},{"title":"DBSCAN算法原理","date":"2018-09-25T08:00:00.000Z","mathjax":true,"top":2,"_content":"<img src=\"https://images.bumpchicken.cn/img/20220508173927.png\" width=\"60%\" height=\"20%\">\n\nDBSCAN(Density-Based Spatial Clustering of Application with Noise)是一种基于密度的空间聚类算法。该算法将具有足够密度的区域划分为簇，并在具有噪声的空间数据中发现任意形状的簇，它将簇定义为密度相连的点的最大集合。算法无需事先指定聚类中心数目，可以对大规模无规则形状的数据进行有效聚类。\n\n<!--more-->\n\n## 相关定义\nDBSCAN有自己的一套符号体系，定义了许多新概念，数学体系十分严谨\n\n### 密度定义\n\n给定数据集$D$\n\n- $\\epsilon$: 邻域半径\n- $\\epsilon$-邻域: 邻域内点的集合\n\n$$N_{\\varepsilon}(p):=\\{\\text{q in dataset D} \\mid \\operatorname{dist}(p,q)<=\\varepsilon\\}$$\n\n【注】_距离度量$dist(p,q)$是聚类算法中一个值得探究的问题。此处的距离度量可以为欧氏距离、曼哈顿距离等多种距离度量方式，并且数据点的维度可为任意维度_\n\n- MinPts: 核心点邻域内数据点的最小数量\n\n<img src=\"https://images.bumpchicken.cn/img/20220508215638.png\" width=\"50%\" height=\"80%\">\n\n如上图，当MinPts = 4, p的密度相较于q大，p称为高密度点\n\n### 核心点、边界点和离群点定义\n\n<img src=\"https://images.bumpchicken.cn/img/20220508220041.png\" width=\"60%\" height=\"60%\">\n\n- 核心点(Core): 高密度点，其 $\\epsilon$-邻域数据点数量 >= MinPts\n- 边界点(Border): 低密度点，但在某个核心点的邻域内\n- 离群点(Outlier): 既不是核心点也不是边界点\n\n### 密度可达定义\n\n- 直接密度可达： 如果p是一个核心点，切q在p的$\\epsilon$-邻域内，那么称q直接密度可达p\n\n【注】_不能说p直接密度可达q，直接密度可达不具有对称性(symmetric)_\n\n<img src=\"https://images.bumpchicken.cn/img/20220508221408.png\" width=\"40%\" height=\"40%\">\n\n\n- 密度可达:如果存在一串这样的数据点: $p_{1},p_{2},...,p_{n}$，其中$p_{1}=q,p_{n}=p$,且$p_{i+1}$直接密度可达$p_{i}$，那么称p密度可达q\n\n【注】_不能说q密度可达p，密度可达同样不具有对称性_\n\n<img src=\"https://images.bumpchicken.cn/img/20220508222514.png\" width=\"50%\" height=\"50%\">\n\n### 密度连通\n\n如果p和q都密度可达点o，那么称p和q密度连通，如下所示\n\n<img src=\"https://images.bumpchicken.cn/img/20220508224900.png\" width=\"50%\" height=\"50%\">\n\n【注】_密度连通具有对称性，可以说q和p密度连通_\n\n## 聚类准则\n给定一个数据集D，参数$\\epsilon$和MinPts，那么聚类产生的子集C必须满足两个准则：\n\n1. Maximality(极大性)：对于任意的p、q，如果$p\\in C$，且q密度可达p，那么同样$q\\in C$\n2. Connectivity(连通性)：对于任意的p、q，p和q是密度相连的\n\n## 聚类流程\n\nDBSCAN聚类过程如下图所示\n\n<img src=\"https://images.bumpchicken.cn/img/20220508225615.png\" width=\"80%\" height=\"80%\">\n\n\n## 参数选择\n\n### 邻域大小$\\epsilon$\n\nDBSCAN采用全局$\\epsilon$和MinPts值，因此每个节点的邻域大小是一致的。当数据密度和聚簇间距离分布不均匀时，若选取较小的$\\epsilon$，则较稀疏的聚簇中的数据点密度会小于MintPts，而被认为是边界点而不被用于所在类的进一步扩展。可能导致较稀疏的聚簇被划分为多个性质相似的小聚簇。相反,若选取较大的$\\epsilon$，则离得较近而密度较大的那些聚簇可能被合并为同一个聚簇，他们之间的差异将被忽略。因此这种情况下，选取合适的邻域大小是较为困难的，当维度较高时，$\\epsilon$的选取更加困难\n\n### MinPts\n\n参数MinPts的选取有一个指导性原则，即 $MinPts >= dim+1$，这里$dim$表示聚类空间的维度大小\n\n## 优缺点\n\n### 优点\n1. 可以对任意形状的稠密数据集进行聚类（K-Means一般只适用于凸数据集）\n2. 可以在聚类时发现异常点，对数据集的异常点不敏感\n\n### 缺点\n1. 如果样本集的密度不均匀，聚类间距相距很大时，聚类效果较差\n2. 对于参数 $\\epsilon$ 和MinPts敏感，不同参数组合对聚类效果影响较大","source":"_posts/Dbscan.md","raw":"\ntitle: DBSCAN算法原理\n\ndate: 2018-09-25 16:00:00\n\ntags: \n  - 聚类\n\ncategories:\n  - 机器学习\n\nmathjax: true\n\ntop: 2\n\n---\n<img src=\"https://images.bumpchicken.cn/img/20220508173927.png\" width=\"60%\" height=\"20%\">\n\nDBSCAN(Density-Based Spatial Clustering of Application with Noise)是一种基于密度的空间聚类算法。该算法将具有足够密度的区域划分为簇，并在具有噪声的空间数据中发现任意形状的簇，它将簇定义为密度相连的点的最大集合。算法无需事先指定聚类中心数目，可以对大规模无规则形状的数据进行有效聚类。\n\n<!--more-->\n\n## 相关定义\nDBSCAN有自己的一套符号体系，定义了许多新概念，数学体系十分严谨\n\n### 密度定义\n\n给定数据集$D$\n\n- $\\epsilon$: 邻域半径\n- $\\epsilon$-邻域: 邻域内点的集合\n\n$$N_{\\varepsilon}(p):=\\{\\text{q in dataset D} \\mid \\operatorname{dist}(p,q)<=\\varepsilon\\}$$\n\n【注】_距离度量$dist(p,q)$是聚类算法中一个值得探究的问题。此处的距离度量可以为欧氏距离、曼哈顿距离等多种距离度量方式，并且数据点的维度可为任意维度_\n\n- MinPts: 核心点邻域内数据点的最小数量\n\n<img src=\"https://images.bumpchicken.cn/img/20220508215638.png\" width=\"50%\" height=\"80%\">\n\n如上图，当MinPts = 4, p的密度相较于q大，p称为高密度点\n\n### 核心点、边界点和离群点定义\n\n<img src=\"https://images.bumpchicken.cn/img/20220508220041.png\" width=\"60%\" height=\"60%\">\n\n- 核心点(Core): 高密度点，其 $\\epsilon$-邻域数据点数量 >= MinPts\n- 边界点(Border): 低密度点，但在某个核心点的邻域内\n- 离群点(Outlier): 既不是核心点也不是边界点\n\n### 密度可达定义\n\n- 直接密度可达： 如果p是一个核心点，切q在p的$\\epsilon$-邻域内，那么称q直接密度可达p\n\n【注】_不能说p直接密度可达q，直接密度可达不具有对称性(symmetric)_\n\n<img src=\"https://images.bumpchicken.cn/img/20220508221408.png\" width=\"40%\" height=\"40%\">\n\n\n- 密度可达:如果存在一串这样的数据点: $p_{1},p_{2},...,p_{n}$，其中$p_{1}=q,p_{n}=p$,且$p_{i+1}$直接密度可达$p_{i}$，那么称p密度可达q\n\n【注】_不能说q密度可达p，密度可达同样不具有对称性_\n\n<img src=\"https://images.bumpchicken.cn/img/20220508222514.png\" width=\"50%\" height=\"50%\">\n\n### 密度连通\n\n如果p和q都密度可达点o，那么称p和q密度连通，如下所示\n\n<img src=\"https://images.bumpchicken.cn/img/20220508224900.png\" width=\"50%\" height=\"50%\">\n\n【注】_密度连通具有对称性，可以说q和p密度连通_\n\n## 聚类准则\n给定一个数据集D，参数$\\epsilon$和MinPts，那么聚类产生的子集C必须满足两个准则：\n\n1. Maximality(极大性)：对于任意的p、q，如果$p\\in C$，且q密度可达p，那么同样$q\\in C$\n2. Connectivity(连通性)：对于任意的p、q，p和q是密度相连的\n\n## 聚类流程\n\nDBSCAN聚类过程如下图所示\n\n<img src=\"https://images.bumpchicken.cn/img/20220508225615.png\" width=\"80%\" height=\"80%\">\n\n\n## 参数选择\n\n### 邻域大小$\\epsilon$\n\nDBSCAN采用全局$\\epsilon$和MinPts值，因此每个节点的邻域大小是一致的。当数据密度和聚簇间距离分布不均匀时，若选取较小的$\\epsilon$，则较稀疏的聚簇中的数据点密度会小于MintPts，而被认为是边界点而不被用于所在类的进一步扩展。可能导致较稀疏的聚簇被划分为多个性质相似的小聚簇。相反,若选取较大的$\\epsilon$，则离得较近而密度较大的那些聚簇可能被合并为同一个聚簇，他们之间的差异将被忽略。因此这种情况下，选取合适的邻域大小是较为困难的，当维度较高时，$\\epsilon$的选取更加困难\n\n### MinPts\n\n参数MinPts的选取有一个指导性原则，即 $MinPts >= dim+1$，这里$dim$表示聚类空间的维度大小\n\n## 优缺点\n\n### 优点\n1. 可以对任意形状的稠密数据集进行聚类（K-Means一般只适用于凸数据集）\n2. 可以在聚类时发现异常点，对数据集的异常点不敏感\n\n### 缺点\n1. 如果样本集的密度不均匀，聚类间距相距很大时，聚类效果较差\n2. 对于参数 $\\epsilon$ 和MinPts敏感，不同参数组合对聚类效果影响较大","slug":"Dbscan","published":1,"updated":"2022-05-08T15:38:58.540Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2xj61er000698ud0czc74xy","content":"<p><img src=\"https://images.bumpchicken.cn/img/20220508173927.png\" width=\"60%\" height=\"20%\"></p>\n<p>DBSCAN(Density-Based Spatial Clustering of Application with\nNoise)是一种基于密度的空间聚类算法。该算法将具有足够密度的区域划分为簇，并在具有噪声的空间数据中发现任意形状的簇，它将簇定义为密度相连的点的最大集合。算法无需事先指定聚类中心数目，可以对大规模无规则形状的数据进行有效聚类。</p>\n<span id=\"more\"></span>\n<h2 id=\"相关定义\">相关定义</h2>\n<p>DBSCAN有自己的一套符号体系，定义了许多新概念，数学体系十分严谨</p>\n<h3 id=\"密度定义\">密度定义</h3>\n<p>给定数据集<span class=\"math inline\">\\(D\\)</span></p>\n<ul>\n<li><span class=\"math inline\">\\(\\epsilon\\)</span>: 邻域半径</li>\n<li><span class=\"math inline\">\\(\\epsilon\\)</span>-邻域:\n邻域内点的集合</li>\n</ul>\n<p><span class=\"math display\">\\[N_{\\varepsilon}(p):=\\{\\text{q in dataset\nD} \\mid \\operatorname{dist}(p,q)&lt;=\\varepsilon\\}\\]</span></p>\n<p>【注】<em>距离度量<span\nclass=\"math inline\">\\(dist(p,q)\\)</span>是聚类算法中一个值得探究的问题。此处的距离度量可以为欧氏距离、曼哈顿距离等多种距离度量方式，并且数据点的维度可为任意维度</em></p>\n<ul>\n<li>MinPts: 核心点邻域内数据点的最小数量</li>\n</ul>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508215638.png\" width=\"50%\" height=\"80%\"></p>\n<p>如上图，当MinPts = 4, p的密度相较于q大，p称为高密度点</p>\n<h3 id=\"核心点边界点和离群点定义\">核心点、边界点和离群点定义</h3>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508220041.png\" width=\"60%\" height=\"60%\"></p>\n<ul>\n<li>核心点(Core): 高密度点，其 <span\nclass=\"math inline\">\\(\\epsilon\\)</span>-邻域数据点数量 &gt;= MinPts</li>\n<li>边界点(Border): 低密度点，但在某个核心点的邻域内</li>\n<li>离群点(Outlier): 既不是核心点也不是边界点</li>\n</ul>\n<h3 id=\"密度可达定义\">密度可达定义</h3>\n<ul>\n<li>直接密度可达： 如果p是一个核心点，切q在p的<span\nclass=\"math inline\">\\(\\epsilon\\)</span>-邻域内，那么称q直接密度可达p</li>\n</ul>\n<p>【注】<em>不能说p直接密度可达q，直接密度可达不具有对称性(symmetric)</em></p>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508221408.png\" width=\"40%\" height=\"40%\"></p>\n<ul>\n<li>密度可达:如果存在一串这样的数据点: <span\nclass=\"math inline\">\\(p_{1},p_{2},...,p_{n}\\)</span>，其中<span\nclass=\"math inline\">\\(p_{1}=q,p_{n}=p\\)</span>,且<span\nclass=\"math inline\">\\(p_{i+1}\\)</span>直接密度可达<span\nclass=\"math inline\">\\(p_{i}\\)</span>，那么称p密度可达q</li>\n</ul>\n<p>【注】<em>不能说q密度可达p，密度可达同样不具有对称性</em></p>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508222514.png\" width=\"50%\" height=\"50%\"></p>\n<h3 id=\"密度连通\">密度连通</h3>\n<p>如果p和q都密度可达点o，那么称p和q密度连通，如下所示</p>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508224900.png\" width=\"50%\" height=\"50%\"></p>\n<p>【注】<em>密度连通具有对称性，可以说q和p密度连通</em></p>\n<h2 id=\"聚类准则\">聚类准则</h2>\n<p>给定一个数据集D，参数<span\nclass=\"math inline\">\\(\\epsilon\\)</span>和MinPts，那么聚类产生的子集C必须满足两个准则：</p>\n<ol type=\"1\">\n<li>Maximality(极大性)：对于任意的p、q，如果<span\nclass=\"math inline\">\\(p\\in C\\)</span>，且q密度可达p，那么同样<span\nclass=\"math inline\">\\(q\\in C\\)</span></li>\n<li>Connectivity(连通性)：对于任意的p、q，p和q是密度相连的</li>\n</ol>\n<h2 id=\"聚类流程\">聚类流程</h2>\n<p>DBSCAN聚类过程如下图所示</p>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508225615.png\" width=\"80%\" height=\"80%\"></p>\n<h2 id=\"参数选择\">参数选择</h2>\n<h3 id=\"邻域大小epsilon\">邻域大小<span\nclass=\"math inline\">\\(\\epsilon\\)</span></h3>\n<p>DBSCAN采用全局<span\nclass=\"math inline\">\\(\\epsilon\\)</span>和MinPts值，因此每个节点的邻域大小是一致的。当数据密度和聚簇间距离分布不均匀时，若选取较小的<span\nclass=\"math inline\">\\(\\epsilon\\)</span>，则较稀疏的聚簇中的数据点密度会小于MintPts，而被认为是边界点而不被用于所在类的进一步扩展。可能导致较稀疏的聚簇被划分为多个性质相似的小聚簇。相反,若选取较大的<span\nclass=\"math inline\">\\(\\epsilon\\)</span>，则离得较近而密度较大的那些聚簇可能被合并为同一个聚簇，他们之间的差异将被忽略。因此这种情况下，选取合适的邻域大小是较为困难的，当维度较高时，<span\nclass=\"math inline\">\\(\\epsilon\\)</span>的选取更加困难</p>\n<h3 id=\"minpts\">MinPts</h3>\n<p>参数MinPts的选取有一个指导性原则，即 <span\nclass=\"math inline\">\\(MinPts &gt;= dim+1\\)</span>，这里<span\nclass=\"math inline\">\\(dim\\)</span>表示聚类空间的维度大小</p>\n<h2 id=\"优缺点\">优缺点</h2>\n<h3 id=\"优点\">优点</h3>\n<ol type=\"1\">\n<li>可以对任意形状的稠密数据集进行聚类（K-Means一般只适用于凸数据集）</li>\n<li>可以在聚类时发现异常点，对数据集的异常点不敏感</li>\n</ol>\n<h3 id=\"缺点\">缺点</h3>\n<ol type=\"1\">\n<li>如果样本集的密度不均匀，聚类间距相距很大时，聚类效果较差</li>\n<li>对于参数 <span class=\"math inline\">\\(\\epsilon\\)</span>\n和MinPts敏感，不同参数组合对聚类效果影响较大</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://images.bumpchicken.cn/img/20220508173927.png\" width=\"60%\" height=\"20%\"></p>\n<p>DBSCAN(Density-Based Spatial Clustering of Application with\nNoise)是一种基于密度的空间聚类算法。该算法将具有足够密度的区域划分为簇，并在具有噪声的空间数据中发现任意形状的簇，它将簇定义为密度相连的点的最大集合。算法无需事先指定聚类中心数目，可以对大规模无规则形状的数据进行有效聚类。</p>","more":"<h2 id=\"相关定义\">相关定义</h2>\n<p>DBSCAN有自己的一套符号体系，定义了许多新概念，数学体系十分严谨</p>\n<h3 id=\"密度定义\">密度定义</h3>\n<p>给定数据集<span class=\"math inline\">\\(D\\)</span></p>\n<ul>\n<li><span class=\"math inline\">\\(\\epsilon\\)</span>: 邻域半径</li>\n<li><span class=\"math inline\">\\(\\epsilon\\)</span>-邻域:\n邻域内点的集合</li>\n</ul>\n<p><span class=\"math display\">\\[N_{\\varepsilon}(p):=\\{\\text{q in dataset\nD} \\mid \\operatorname{dist}(p,q)&lt;=\\varepsilon\\}\\]</span></p>\n<p>【注】<em>距离度量<span\nclass=\"math inline\">\\(dist(p,q)\\)</span>是聚类算法中一个值得探究的问题。此处的距离度量可以为欧氏距离、曼哈顿距离等多种距离度量方式，并且数据点的维度可为任意维度</em></p>\n<ul>\n<li>MinPts: 核心点邻域内数据点的最小数量</li>\n</ul>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508215638.png\" width=\"50%\" height=\"80%\"></p>\n<p>如上图，当MinPts = 4, p的密度相较于q大，p称为高密度点</p>\n<h3 id=\"核心点边界点和离群点定义\">核心点、边界点和离群点定义</h3>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508220041.png\" width=\"60%\" height=\"60%\"></p>\n<ul>\n<li>核心点(Core): 高密度点，其 <span\nclass=\"math inline\">\\(\\epsilon\\)</span>-邻域数据点数量 &gt;= MinPts</li>\n<li>边界点(Border): 低密度点，但在某个核心点的邻域内</li>\n<li>离群点(Outlier): 既不是核心点也不是边界点</li>\n</ul>\n<h3 id=\"密度可达定义\">密度可达定义</h3>\n<ul>\n<li>直接密度可达： 如果p是一个核心点，切q在p的<span\nclass=\"math inline\">\\(\\epsilon\\)</span>-邻域内，那么称q直接密度可达p</li>\n</ul>\n<p>【注】<em>不能说p直接密度可达q，直接密度可达不具有对称性(symmetric)</em></p>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508221408.png\" width=\"40%\" height=\"40%\"></p>\n<ul>\n<li>密度可达:如果存在一串这样的数据点: <span\nclass=\"math inline\">\\(p_{1},p_{2},...,p_{n}\\)</span>，其中<span\nclass=\"math inline\">\\(p_{1}=q,p_{n}=p\\)</span>,且<span\nclass=\"math inline\">\\(p_{i+1}\\)</span>直接密度可达<span\nclass=\"math inline\">\\(p_{i}\\)</span>，那么称p密度可达q</li>\n</ul>\n<p>【注】<em>不能说q密度可达p，密度可达同样不具有对称性</em></p>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508222514.png\" width=\"50%\" height=\"50%\"></p>\n<h3 id=\"密度连通\">密度连通</h3>\n<p>如果p和q都密度可达点o，那么称p和q密度连通，如下所示</p>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508224900.png\" width=\"50%\" height=\"50%\"></p>\n<p>【注】<em>密度连通具有对称性，可以说q和p密度连通</em></p>\n<h2 id=\"聚类准则\">聚类准则</h2>\n<p>给定一个数据集D，参数<span\nclass=\"math inline\">\\(\\epsilon\\)</span>和MinPts，那么聚类产生的子集C必须满足两个准则：</p>\n<ol type=\"1\">\n<li>Maximality(极大性)：对于任意的p、q，如果<span\nclass=\"math inline\">\\(p\\in C\\)</span>，且q密度可达p，那么同样<span\nclass=\"math inline\">\\(q\\in C\\)</span></li>\n<li>Connectivity(连通性)：对于任意的p、q，p和q是密度相连的</li>\n</ol>\n<h2 id=\"聚类流程\">聚类流程</h2>\n<p>DBSCAN聚类过程如下图所示</p>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508225615.png\" width=\"80%\" height=\"80%\"></p>\n<h2 id=\"参数选择\">参数选择</h2>\n<h3 id=\"邻域大小epsilon\">邻域大小<span\nclass=\"math inline\">\\(\\epsilon\\)</span></h3>\n<p>DBSCAN采用全局<span\nclass=\"math inline\">\\(\\epsilon\\)</span>和MinPts值，因此每个节点的邻域大小是一致的。当数据密度和聚簇间距离分布不均匀时，若选取较小的<span\nclass=\"math inline\">\\(\\epsilon\\)</span>，则较稀疏的聚簇中的数据点密度会小于MintPts，而被认为是边界点而不被用于所在类的进一步扩展。可能导致较稀疏的聚簇被划分为多个性质相似的小聚簇。相反,若选取较大的<span\nclass=\"math inline\">\\(\\epsilon\\)</span>，则离得较近而密度较大的那些聚簇可能被合并为同一个聚簇，他们之间的差异将被忽略。因此这种情况下，选取合适的邻域大小是较为困难的，当维度较高时，<span\nclass=\"math inline\">\\(\\epsilon\\)</span>的选取更加困难</p>\n<h3 id=\"minpts\">MinPts</h3>\n<p>参数MinPts的选取有一个指导性原则，即 <span\nclass=\"math inline\">\\(MinPts &gt;= dim+1\\)</span>，这里<span\nclass=\"math inline\">\\(dim\\)</span>表示聚类空间的维度大小</p>\n<h2 id=\"优缺点\">优缺点</h2>\n<h3 id=\"优点\">优点</h3>\n<ol type=\"1\">\n<li>可以对任意形状的稠密数据集进行聚类（K-Means一般只适用于凸数据集）</li>\n<li>可以在聚类时发现异常点，对数据集的异常点不敏感</li>\n</ol>\n<h3 id=\"缺点\">缺点</h3>\n<ol type=\"1\">\n<li>如果样本集的密度不均匀，聚类间距相距很大时，聚类效果较差</li>\n<li>对于参数 <span class=\"math inline\">\\(\\epsilon\\)</span>\n和MinPts敏感，不同参数组合对聚类效果影响较大</li>\n</ol>"},{"title":"PageRank算法原理","date":"2020-12-08T10:05:00.000Z","mathjax":true,"_content":"PageRank, 网页排名，又称网页级别，佩奇排名等，是一种由搜索引擎根据网页之间相互的超链接计算的技术，作为网页排名的要素之一，以Google创办人拉里佩奇(Larry Page)命名。Google用它来体现网页的相关性和重要性，在搜索引擎优化操作中是经常被用来评估网页优化的成效因素之一。\n\n<!--more-->\n\n## PageRank简单形式\n\n### 基本思想\n\n- 如果一个网页被其他很多网页链接，则重要，权值高\n- 如果PageRank值高的网页链接某个网页，则该网页权值也会相应提高\n\n### 计算方式\n\n假设由如下四个网页A、B、C、D，链接信息如下图所示:\n\n<img src=\"https://images.bumpchicken.cn/img/20220508234438.png\" width=\"50%\" height=\"50%\">\n\n上图是一个有向图，将网页看成节点，网页之间的链接关系用边表示，出链指的是链接出去的链接，入链指的是进来的链接，比如上图A有2个入链，3个出链\n\n__PageRank定义__: 一个网页的影响力 = 所有入链集合的页面加权影响力之和\n\n上图A节点的影响力可用如下公式计算:\n\n$$PR(A) = \\frac{PR(B)}{L(B)} + \\frac{PR(C)}{L(C)} + \\frac{PR(D)}{L(D)}$$\n\n其中，$PR(A)$表示网页A的影响力，$L(B)$表示B的出链数量，用通用的公式表示为：\n\n$$PR(u)=\\sum_{\\nu \\in B_{u}} \\frac{P R(v)}{L(v)}$$\n\nu为待评估的页面，$B_{u}$为页面u的入链集合。针对入链集合中的任意页面v，它能给u带来的影响力是其自身的影响力$PR(v)$除以v页面的出链数量，即页面v把影响力$PR(v$平均分配给了它的出链，这样统计所有能给u带来链接的页面v，得到的总和就是网页u的影响力，即为$PR(u)$\n\n因此，PageRank的简单形式定义如下：\n\n> 当含有若干个节点的有向图是强连通且非周期性的有向图时，在其基础上定义的随机游走模型，即一阶马尔科夫链具有平稳分布，平稳分布向量称为这个有向图的PageRank。若矩阵M是马尔科夫链的转移矩阵，则向量R满足:\n> $$ MR = R $$\n\n上图A、B、C、D四个网页的转移矩阵M如下:\n\n$$M=\\left[\\begin{array}{cccc}\n0 & 1 / 2 & 1 & 0 \\\\\n1 / 3 & 0 & 0 & 1 / 2 \\\\\n1 / 3 & 0 & 0 & 1 / 2 \\\\\n1 / 3 & 1 / 2 & 0 & 0\n\\end{array}\\right]$$\n\n假设A、B、C、D四个页面的初始影响力是相同的，即$w_{0}^{T} = [1/4\\space1/4\\space1/4\\space1/4]$\n\n第一次转移后，各页面影响力$w_{1}$变为:\n\n$$w_{1}=M w_{0}=\\left[\\begin{array}{cccc}\n0 & 1 / 2 & 1 & 0 \\\\\n1 / 3 & 0 & 0 & 1 / 2 \\\\\n1 / 3 & 0 & 0 & 1 / 2 \\\\\n1 / 3 & 1 / 2 & 0 & 0\n\\end{array}\\right]\\left[\\begin{array}{c}\n1 / 4 \\\\\n1 / 4 \\\\\n1 / 4 \\\\\n1 / 4\n\\end{array}\\right]=\\left[\\begin{array}{l}\n9 / 24 \\\\\n5 / 24 \\\\\n5 / 24 \\\\\n5 / 24\n\\end{array}\\right]$$\n\n之后再用转移矩阵乘以$w_{1}$得到$w_{2}$，直到第n次迭代后$w_{n}$收敛不再变化，上述例子，$w$会收敛至[0.3333 0.2222 0.2222 0.2222]，对应A、B、C、D的影响力\n\n### 等级泄露和等级沉没\n\n1. 等级泄露（Rank Leak): 如果一个网页没有出链，就像是一个黑洞一样，吸收了其他网页的影响力而不释放，最终会导致其他网页的PR值为0，如下图所示:\n\n<img src=\"https://images.bumpchicken.cn/img/20220509000856.png\" width=\"50%\" height=\"50%\">\n\n2. 等级沉没（Rank Sink): 如果一个网页只有出链没有入链，计算过程迭代下来，会导致这个网页的PR值为0，入下图所示:\n\n<img src=\"https://images.bumpchicken.cn/img/20220509001111.png\" width=\"50%\" height=\"50%\">\n\n## PageRank改进版\n\n为了解决简化模型中存在的等级泄露和等级沉没问题，拉里佩奇提出了PageRank的随机浏览模型。他假设了这样一个场景：\n\n> 用户并不都是按照跳转链接的方式来上网，还有一种可能是不论当前处于哪个页面，都有概率访问到其他任意页面，比如用户就是要直接输入网址访问其他页面，虽然这个概率比较小\n\n所以他定义了阻尼因子d，这个因子代表了用户按照跳转链接来上网的概率，通常可以取一个固定值0.85，而$1-d=0.15$则代表了用户不是通过跳转链接的方式来访问网页的概率\n\n下式是PageRank计算影响力的改进公式:\n\n$$PR(u)=\\frac{1-d}{N}+d \\sum_{\\nu=B_{u}} \\frac{P R(v)}{L(v)}$$\n\n其中，N为网页总数，这样我们有可以重新迭代网页的权重计算了，因为加入了阻尼因子d，一定程度上解决了等级泄露和等级沉没的问题\n\n同样地，定义概率转移矩阵M，则其一般公式如下:\n\n$$R=d M R+\\frac{1-d}{n}1$$\n\n其中，$d(0<=d<=1)$为阻尼因子，$1$是所有分量为1的n维向量\n\n## PageRank 代码实现\n\n```python\nimport numpy as np\nfrom scipy.sparse import csc_matrix\n\ndef pageRank(G, s=.85, maxerr=.0001):\n    \"\"\"\n    Computes the pagerank for each of the n states\n    Parameters\n    ----------\n    G: matrix representing state transitions\n       Gij is a binary value representing a transition from state i to j.\n    s: probability of following a transition. 1-s probability of teleporting\n       to another state.\n    maxerr: if the sum of pageranks between iterations is bellow this we will\n            have converged.\n    \"\"\"\n    n = G.shape[0]\n    # transform G into markov matrix A\n    A = csc_matrix(G, dtype=np.float)\n    rsums = np.array(A.sum(1))[:, 0]\n    ri, ci = A.nonzero()\n    A.data /= rsums[ri]\n\n    # bool array of sink states\n    sink = rsums == 0\n\n    # Compute pagerank r until we converge\n    ro, r = np.zeros(n), np.ones(n)\n    while np.sum(np.abs(r - ro)) > maxerr:       # 迭代直至收敛\n        ro = r.copy()\n        # calculate each pagerank at a time\n        for i in range(0, n):\n            # inlinks of state i\n            Ai = np.array(A[:, i].todense())[:, 0]\n            # account for sink states\n            Di = sink / float(n)\n            # account for teleportation to state i\n            Ei = np.ones(n) / float(n)\n            r[i] = ro.dot(Ai * s + Di * s + Ei * (1 - s))\n\n    # return normalized pagerank\n    return r / float(sum(r))\n```\n\n使用示例：\n```python\nG = np.array([[0,0,1,0,0,0,0],\n              [0,1,1,0,0,0,0],\n              [1,0,1,1,0,0,0],\n              [0,0,0,1,1,0,0],\n              [0,0,0,0,0,0,1],\n              [0,0,0,0,0,1,1],\n              [0,0,0,1,1,0,1]])\nprint(pageRank(G,s=.86))\n--------------------\n[0.12727557 0.03616954 0.12221594 0.22608452 0.28934412 0.03616954 0.16274076]\n```\n\n## 参考资料\n\n1.https://www.cnblogs.com/jpcflyer/p/11180263.html\n\n2.[PageRank notebook](https://github.com/fengdu78/lihang-code/blob/master/%E7%AC%AC21%E7%AB%A0%20PageRank%E7%AE%97%E6%B3%95/21.PageRank.ipynb)\n\n## 其他\n\n一些相似算法或改进的算法\n\n1.LeaderRank\n\n2.Hilltop算法\n\n3.ExpertRank\n\n4.HITS\n\n5.TrustRank\n","source":"_posts/PageRank.md","raw":"\ntitle: PageRank算法原理\n\ndate: 2020-12-08 18:05:00\n\ntags: \n  - 排序\n\ncategories:\n  - 根因定位\n\nmathjax: true\n\n------\nPageRank, 网页排名，又称网页级别，佩奇排名等，是一种由搜索引擎根据网页之间相互的超链接计算的技术，作为网页排名的要素之一，以Google创办人拉里佩奇(Larry Page)命名。Google用它来体现网页的相关性和重要性，在搜索引擎优化操作中是经常被用来评估网页优化的成效因素之一。\n\n<!--more-->\n\n## PageRank简单形式\n\n### 基本思想\n\n- 如果一个网页被其他很多网页链接，则重要，权值高\n- 如果PageRank值高的网页链接某个网页，则该网页权值也会相应提高\n\n### 计算方式\n\n假设由如下四个网页A、B、C、D，链接信息如下图所示:\n\n<img src=\"https://images.bumpchicken.cn/img/20220508234438.png\" width=\"50%\" height=\"50%\">\n\n上图是一个有向图，将网页看成节点，网页之间的链接关系用边表示，出链指的是链接出去的链接，入链指的是进来的链接，比如上图A有2个入链，3个出链\n\n__PageRank定义__: 一个网页的影响力 = 所有入链集合的页面加权影响力之和\n\n上图A节点的影响力可用如下公式计算:\n\n$$PR(A) = \\frac{PR(B)}{L(B)} + \\frac{PR(C)}{L(C)} + \\frac{PR(D)}{L(D)}$$\n\n其中，$PR(A)$表示网页A的影响力，$L(B)$表示B的出链数量，用通用的公式表示为：\n\n$$PR(u)=\\sum_{\\nu \\in B_{u}} \\frac{P R(v)}{L(v)}$$\n\nu为待评估的页面，$B_{u}$为页面u的入链集合。针对入链集合中的任意页面v，它能给u带来的影响力是其自身的影响力$PR(v)$除以v页面的出链数量，即页面v把影响力$PR(v$平均分配给了它的出链，这样统计所有能给u带来链接的页面v，得到的总和就是网页u的影响力，即为$PR(u)$\n\n因此，PageRank的简单形式定义如下：\n\n> 当含有若干个节点的有向图是强连通且非周期性的有向图时，在其基础上定义的随机游走模型，即一阶马尔科夫链具有平稳分布，平稳分布向量称为这个有向图的PageRank。若矩阵M是马尔科夫链的转移矩阵，则向量R满足:\n> $$ MR = R $$\n\n上图A、B、C、D四个网页的转移矩阵M如下:\n\n$$M=\\left[\\begin{array}{cccc}\n0 & 1 / 2 & 1 & 0 \\\\\n1 / 3 & 0 & 0 & 1 / 2 \\\\\n1 / 3 & 0 & 0 & 1 / 2 \\\\\n1 / 3 & 1 / 2 & 0 & 0\n\\end{array}\\right]$$\n\n假设A、B、C、D四个页面的初始影响力是相同的，即$w_{0}^{T} = [1/4\\space1/4\\space1/4\\space1/4]$\n\n第一次转移后，各页面影响力$w_{1}$变为:\n\n$$w_{1}=M w_{0}=\\left[\\begin{array}{cccc}\n0 & 1 / 2 & 1 & 0 \\\\\n1 / 3 & 0 & 0 & 1 / 2 \\\\\n1 / 3 & 0 & 0 & 1 / 2 \\\\\n1 / 3 & 1 / 2 & 0 & 0\n\\end{array}\\right]\\left[\\begin{array}{c}\n1 / 4 \\\\\n1 / 4 \\\\\n1 / 4 \\\\\n1 / 4\n\\end{array}\\right]=\\left[\\begin{array}{l}\n9 / 24 \\\\\n5 / 24 \\\\\n5 / 24 \\\\\n5 / 24\n\\end{array}\\right]$$\n\n之后再用转移矩阵乘以$w_{1}$得到$w_{2}$，直到第n次迭代后$w_{n}$收敛不再变化，上述例子，$w$会收敛至[0.3333 0.2222 0.2222 0.2222]，对应A、B、C、D的影响力\n\n### 等级泄露和等级沉没\n\n1. 等级泄露（Rank Leak): 如果一个网页没有出链，就像是一个黑洞一样，吸收了其他网页的影响力而不释放，最终会导致其他网页的PR值为0，如下图所示:\n\n<img src=\"https://images.bumpchicken.cn/img/20220509000856.png\" width=\"50%\" height=\"50%\">\n\n2. 等级沉没（Rank Sink): 如果一个网页只有出链没有入链，计算过程迭代下来，会导致这个网页的PR值为0，入下图所示:\n\n<img src=\"https://images.bumpchicken.cn/img/20220509001111.png\" width=\"50%\" height=\"50%\">\n\n## PageRank改进版\n\n为了解决简化模型中存在的等级泄露和等级沉没问题，拉里佩奇提出了PageRank的随机浏览模型。他假设了这样一个场景：\n\n> 用户并不都是按照跳转链接的方式来上网，还有一种可能是不论当前处于哪个页面，都有概率访问到其他任意页面，比如用户就是要直接输入网址访问其他页面，虽然这个概率比较小\n\n所以他定义了阻尼因子d，这个因子代表了用户按照跳转链接来上网的概率，通常可以取一个固定值0.85，而$1-d=0.15$则代表了用户不是通过跳转链接的方式来访问网页的概率\n\n下式是PageRank计算影响力的改进公式:\n\n$$PR(u)=\\frac{1-d}{N}+d \\sum_{\\nu=B_{u}} \\frac{P R(v)}{L(v)}$$\n\n其中，N为网页总数，这样我们有可以重新迭代网页的权重计算了，因为加入了阻尼因子d，一定程度上解决了等级泄露和等级沉没的问题\n\n同样地，定义概率转移矩阵M，则其一般公式如下:\n\n$$R=d M R+\\frac{1-d}{n}1$$\n\n其中，$d(0<=d<=1)$为阻尼因子，$1$是所有分量为1的n维向量\n\n## PageRank 代码实现\n\n```python\nimport numpy as np\nfrom scipy.sparse import csc_matrix\n\ndef pageRank(G, s=.85, maxerr=.0001):\n    \"\"\"\n    Computes the pagerank for each of the n states\n    Parameters\n    ----------\n    G: matrix representing state transitions\n       Gij is a binary value representing a transition from state i to j.\n    s: probability of following a transition. 1-s probability of teleporting\n       to another state.\n    maxerr: if the sum of pageranks between iterations is bellow this we will\n            have converged.\n    \"\"\"\n    n = G.shape[0]\n    # transform G into markov matrix A\n    A = csc_matrix(G, dtype=np.float)\n    rsums = np.array(A.sum(1))[:, 0]\n    ri, ci = A.nonzero()\n    A.data /= rsums[ri]\n\n    # bool array of sink states\n    sink = rsums == 0\n\n    # Compute pagerank r until we converge\n    ro, r = np.zeros(n), np.ones(n)\n    while np.sum(np.abs(r - ro)) > maxerr:       # 迭代直至收敛\n        ro = r.copy()\n        # calculate each pagerank at a time\n        for i in range(0, n):\n            # inlinks of state i\n            Ai = np.array(A[:, i].todense())[:, 0]\n            # account for sink states\n            Di = sink / float(n)\n            # account for teleportation to state i\n            Ei = np.ones(n) / float(n)\n            r[i] = ro.dot(Ai * s + Di * s + Ei * (1 - s))\n\n    # return normalized pagerank\n    return r / float(sum(r))\n```\n\n使用示例：\n```python\nG = np.array([[0,0,1,0,0,0,0],\n              [0,1,1,0,0,0,0],\n              [1,0,1,1,0,0,0],\n              [0,0,0,1,1,0,0],\n              [0,0,0,0,0,0,1],\n              [0,0,0,0,0,1,1],\n              [0,0,0,1,1,0,1]])\nprint(pageRank(G,s=.86))\n--------------------\n[0.12727557 0.03616954 0.12221594 0.22608452 0.28934412 0.03616954 0.16274076]\n```\n\n## 参考资料\n\n1.https://www.cnblogs.com/jpcflyer/p/11180263.html\n\n2.[PageRank notebook](https://github.com/fengdu78/lihang-code/blob/master/%E7%AC%AC21%E7%AB%A0%20PageRank%E7%AE%97%E6%B3%95/21.PageRank.ipynb)\n\n## 其他\n\n一些相似算法或改进的算法\n\n1.LeaderRank\n\n2.Hilltop算法\n\n3.ExpertRank\n\n4.HITS\n\n5.TrustRank\n","slug":"PageRank","published":1,"updated":"2022-05-08T16:49:37.694Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2xj61es000898udefb2dn80","content":"<p>PageRank,\n网页排名，又称网页级别，佩奇排名等，是一种由搜索引擎根据网页之间相互的超链接计算的技术，作为网页排名的要素之一，以Google创办人拉里佩奇(Larry\nPage)命名。Google用它来体现网页的相关性和重要性，在搜索引擎优化操作中是经常被用来评估网页优化的成效因素之一。</p>\n<span id=\"more\"></span>\n<h2 id=\"pagerank简单形式\">PageRank简单形式</h2>\n<h3 id=\"基本思想\">基本思想</h3>\n<ul>\n<li>如果一个网页被其他很多网页链接，则重要，权值高</li>\n<li>如果PageRank值高的网页链接某个网页，则该网页权值也会相应提高</li>\n</ul>\n<h3 id=\"计算方式\">计算方式</h3>\n<p>假设由如下四个网页A、B、C、D，链接信息如下图所示:</p>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508234438.png\" width=\"50%\" height=\"50%\"></p>\n<p>上图是一个有向图，将网页看成节点，网页之间的链接关系用边表示，出链指的是链接出去的链接，入链指的是进来的链接，比如上图A有2个入链，3个出链</p>\n<p><strong>PageRank定义</strong>: 一个网页的影响力 =\n所有入链集合的页面加权影响力之和</p>\n<p>上图A节点的影响力可用如下公式计算:</p>\n<p><span class=\"math display\">\\[PR(A) = \\frac{PR(B)}{L(B)} +\n\\frac{PR(C)}{L(C)} + \\frac{PR(D)}{L(D)}\\]</span></p>\n<p>其中，<span\nclass=\"math inline\">\\(PR(A)\\)</span>表示网页A的影响力，<span\nclass=\"math inline\">\\(L(B)\\)</span>表示B的出链数量，用通用的公式表示为：</p>\n<p><span class=\"math display\">\\[PR(u)=\\sum_{\\nu \\in B_{u}} \\frac{P\nR(v)}{L(v)}\\]</span></p>\n<p>u为待评估的页面，<span\nclass=\"math inline\">\\(B_{u}\\)</span>为页面u的入链集合。针对入链集合中的任意页面v，它能给u带来的影响力是其自身的影响力<span\nclass=\"math inline\">\\(PR(v)\\)</span>除以v页面的出链数量，即页面v把影响力<span\nclass=\"math inline\">\\(PR(v\\)</span>平均分配给了它的出链，这样统计所有能给u带来链接的页面v，得到的总和就是网页u的影响力，即为<span\nclass=\"math inline\">\\(PR(u)\\)</span></p>\n<p>因此，PageRank的简单形式定义如下：</p>\n<blockquote>\n<p>当含有若干个节点的有向图是强连通且非周期性的有向图时，在其基础上定义的随机游走模型，即一阶马尔科夫链具有平稳分布，平稳分布向量称为这个有向图的PageRank。若矩阵M是马尔科夫链的转移矩阵，则向量R满足:\n<span class=\"math display\">\\[ MR = R \\]</span></p>\n</blockquote>\n<p>上图A、B、C、D四个网页的转移矩阵M如下:</p>\n<p><span class=\"math display\">\\[M=\\left[\\begin{array}{cccc}\n0 &amp; 1 / 2 &amp; 1 &amp; 0 \\\\\n1 / 3 &amp; 0 &amp; 0 &amp; 1 / 2 \\\\\n1 / 3 &amp; 0 &amp; 0 &amp; 1 / 2 \\\\\n1 / 3 &amp; 1 / 2 &amp; 0 &amp; 0\n\\end{array}\\right]\\]</span></p>\n<p>假设A、B、C、D四个页面的初始影响力是相同的，即<span\nclass=\"math inline\">\\(w_{0}^{T} =\n[1/4\\space1/4\\space1/4\\space1/4]\\)</span></p>\n<p>第一次转移后，各页面影响力<span\nclass=\"math inline\">\\(w_{1}\\)</span>变为:</p>\n<p><span class=\"math display\">\\[w_{1}=M w_{0}=\\left[\\begin{array}{cccc}\n0 &amp; 1 / 2 &amp; 1 &amp; 0 \\\\\n1 / 3 &amp; 0 &amp; 0 &amp; 1 / 2 \\\\\n1 / 3 &amp; 0 &amp; 0 &amp; 1 / 2 \\\\\n1 / 3 &amp; 1 / 2 &amp; 0 &amp; 0\n\\end{array}\\right]\\left[\\begin{array}{c}\n1 / 4 \\\\\n1 / 4 \\\\\n1 / 4 \\\\\n1 / 4\n\\end{array}\\right]=\\left[\\begin{array}{l}\n9 / 24 \\\\\n5 / 24 \\\\\n5 / 24 \\\\\n5 / 24\n\\end{array}\\right]\\]</span></p>\n<p>之后再用转移矩阵乘以<span\nclass=\"math inline\">\\(w_{1}\\)</span>得到<span\nclass=\"math inline\">\\(w_{2}\\)</span>，直到第n次迭代后<span\nclass=\"math inline\">\\(w_{n}\\)</span>收敛不再变化，上述例子，<span\nclass=\"math inline\">\\(w\\)</span>会收敛至[0.3333 0.2222 0.2222\n0.2222]，对应A、B、C、D的影响力</p>\n<h3 id=\"等级泄露和等级沉没\">等级泄露和等级沉没</h3>\n<ol type=\"1\">\n<li>等级泄露（Rank Leak):\n如果一个网页没有出链，就像是一个黑洞一样，吸收了其他网页的影响力而不释放，最终会导致其他网页的PR值为0，如下图所示:</li>\n</ol>\n<p><img src=\"https://images.bumpchicken.cn/img/20220509000856.png\" width=\"50%\" height=\"50%\"></p>\n<ol start=\"2\" type=\"1\">\n<li>等级沉没（Rank Sink):\n如果一个网页只有出链没有入链，计算过程迭代下来，会导致这个网页的PR值为0，入下图所示:</li>\n</ol>\n<p><img src=\"https://images.bumpchicken.cn/img/20220509001111.png\" width=\"50%\" height=\"50%\"></p>\n<h2 id=\"pagerank改进版\">PageRank改进版</h2>\n<p>为了解决简化模型中存在的等级泄露和等级沉没问题，拉里佩奇提出了PageRank的随机浏览模型。他假设了这样一个场景：</p>\n<blockquote>\n<p>用户并不都是按照跳转链接的方式来上网，还有一种可能是不论当前处于哪个页面，都有概率访问到其他任意页面，比如用户就是要直接输入网址访问其他页面，虽然这个概率比较小</p>\n</blockquote>\n<p>所以他定义了阻尼因子d，这个因子代表了用户按照跳转链接来上网的概率，通常可以取一个固定值0.85，而<span\nclass=\"math inline\">\\(1-d=0.15\\)</span>则代表了用户不是通过跳转链接的方式来访问网页的概率</p>\n<p>下式是PageRank计算影响力的改进公式:</p>\n<p><span class=\"math display\">\\[PR(u)=\\frac{1-d}{N}+d \\sum_{\\nu=B_{u}}\n\\frac{P R(v)}{L(v)}\\]</span></p>\n<p>其中，N为网页总数，这样我们有可以重新迭代网页的权重计算了，因为加入了阻尼因子d，一定程度上解决了等级泄露和等级沉没的问题</p>\n<p>同样地，定义概率转移矩阵M，则其一般公式如下:</p>\n<p><span class=\"math display\">\\[R=d M R+\\frac{1-d}{n}1\\]</span></p>\n<p>其中，<span\nclass=\"math inline\">\\(d(0&lt;=d&lt;=1)\\)</span>为阻尼因子，<span\nclass=\"math inline\">\\(1\\)</span>是所有分量为1的n维向量</p>\n<h2 id=\"pagerank-代码实现\">PageRank 代码实现</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> scipy.sparse <span class=\"keyword\">import</span> csc_matrix</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">pageRank</span>(<span class=\"params\">G, s=<span class=\"number\">.85</span>, maxerr=<span class=\"number\">.0001</span></span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Computes the pagerank for each of the n states</span></span><br><span class=\"line\"><span class=\"string\">    Parameters</span></span><br><span class=\"line\"><span class=\"string\">    ----------</span></span><br><span class=\"line\"><span class=\"string\">    G: matrix representing state transitions</span></span><br><span class=\"line\"><span class=\"string\">       Gij is a binary value representing a transition from state i to j.</span></span><br><span class=\"line\"><span class=\"string\">    s: probability of following a transition. 1-s probability of teleporting</span></span><br><span class=\"line\"><span class=\"string\">       to another state.</span></span><br><span class=\"line\"><span class=\"string\">    maxerr: if the sum of pageranks between iterations is bellow this we will</span></span><br><span class=\"line\"><span class=\"string\">            have converged.</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    n = G.shape[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"comment\"># transform G into markov matrix A</span></span><br><span class=\"line\">    A = csc_matrix(G, dtype=np.<span class=\"built_in\">float</span>)</span><br><span class=\"line\">    rsums = np.array(A.<span class=\"built_in\">sum</span>(<span class=\"number\">1</span>))[:, <span class=\"number\">0</span>]</span><br><span class=\"line\">    ri, ci = A.nonzero()</span><br><span class=\"line\">    A.data /= rsums[ri]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># bool array of sink states</span></span><br><span class=\"line\">    sink = rsums == <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Compute pagerank r until we converge</span></span><br><span class=\"line\">    ro, r = np.zeros(n), np.ones(n)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> np.<span class=\"built_in\">sum</span>(np.<span class=\"built_in\">abs</span>(r - ro)) &gt; maxerr:       <span class=\"comment\"># 迭代直至收敛</span></span><br><span class=\"line\">        ro = r.copy()</span><br><span class=\"line\">        <span class=\"comment\"># calculate each pagerank at a time</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, n):</span><br><span class=\"line\">            <span class=\"comment\"># inlinks of state i</span></span><br><span class=\"line\">            Ai = np.array(A[:, i].todense())[:, <span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># account for sink states</span></span><br><span class=\"line\">            Di = sink / <span class=\"built_in\">float</span>(n)</span><br><span class=\"line\">            <span class=\"comment\"># account for teleportation to state i</span></span><br><span class=\"line\">            Ei = np.ones(n) / <span class=\"built_in\">float</span>(n)</span><br><span class=\"line\">            r[i] = ro.dot(Ai * s + Di * s + Ei * (<span class=\"number\">1</span> - s))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># return normalized pagerank</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> r / <span class=\"built_in\">float</span>(<span class=\"built_in\">sum</span>(r))</span><br></pre></td></tr></table></figure>\n<p>使用示例： <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">G = np.array([[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">              [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">              [<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">              [<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">              [<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>],</span><br><span class=\"line\">              [<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>],</span><br><span class=\"line\">              [<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(pageRank(G,s=<span class=\"number\">.86</span>))</span><br><span class=\"line\">--------------------</span><br><span class=\"line\">[<span class=\"number\">0.12727557</span> <span class=\"number\">0.03616954</span> <span class=\"number\">0.12221594</span> <span class=\"number\">0.22608452</span> <span class=\"number\">0.28934412</span> <span class=\"number\">0.03616954</span> <span class=\"number\">0.16274076</span>]</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考资料\">参考资料</h2>\n<p>1.https://www.cnblogs.com/jpcflyer/p/11180263.html</p>\n<p>2.<a\nhref=\"https://github.com/fengdu78/lihang-code/blob/master/%E7%AC%AC21%E7%AB%A0%20PageRank%E7%AE%97%E6%B3%95/21.PageRank.ipynb\">PageRank\nnotebook</a></p>\n<h2 id=\"其他\">其他</h2>\n<p>一些相似算法或改进的算法</p>\n<p>1.LeaderRank</p>\n<p>2.Hilltop算法</p>\n<p>3.ExpertRank</p>\n<p>4.HITS</p>\n<p>5.TrustRank</p>\n","site":{"data":{}},"excerpt":"<p>PageRank,\n网页排名，又称网页级别，佩奇排名等，是一种由搜索引擎根据网页之间相互的超链接计算的技术，作为网页排名的要素之一，以Google创办人拉里佩奇(Larry\nPage)命名。Google用它来体现网页的相关性和重要性，在搜索引擎优化操作中是经常被用来评估网页优化的成效因素之一。</p>","more":"<h2 id=\"pagerank简单形式\">PageRank简单形式</h2>\n<h3 id=\"基本思想\">基本思想</h3>\n<ul>\n<li>如果一个网页被其他很多网页链接，则重要，权值高</li>\n<li>如果PageRank值高的网页链接某个网页，则该网页权值也会相应提高</li>\n</ul>\n<h3 id=\"计算方式\">计算方式</h3>\n<p>假设由如下四个网页A、B、C、D，链接信息如下图所示:</p>\n<p><img src=\"https://images.bumpchicken.cn/img/20220508234438.png\" width=\"50%\" height=\"50%\"></p>\n<p>上图是一个有向图，将网页看成节点，网页之间的链接关系用边表示，出链指的是链接出去的链接，入链指的是进来的链接，比如上图A有2个入链，3个出链</p>\n<p><strong>PageRank定义</strong>: 一个网页的影响力 =\n所有入链集合的页面加权影响力之和</p>\n<p>上图A节点的影响力可用如下公式计算:</p>\n<p><span class=\"math display\">\\[PR(A) = \\frac{PR(B)}{L(B)} +\n\\frac{PR(C)}{L(C)} + \\frac{PR(D)}{L(D)}\\]</span></p>\n<p>其中，<span\nclass=\"math inline\">\\(PR(A)\\)</span>表示网页A的影响力，<span\nclass=\"math inline\">\\(L(B)\\)</span>表示B的出链数量，用通用的公式表示为：</p>\n<p><span class=\"math display\">\\[PR(u)=\\sum_{\\nu \\in B_{u}} \\frac{P\nR(v)}{L(v)}\\]</span></p>\n<p>u为待评估的页面，<span\nclass=\"math inline\">\\(B_{u}\\)</span>为页面u的入链集合。针对入链集合中的任意页面v，它能给u带来的影响力是其自身的影响力<span\nclass=\"math inline\">\\(PR(v)\\)</span>除以v页面的出链数量，即页面v把影响力<span\nclass=\"math inline\">\\(PR(v\\)</span>平均分配给了它的出链，这样统计所有能给u带来链接的页面v，得到的总和就是网页u的影响力，即为<span\nclass=\"math inline\">\\(PR(u)\\)</span></p>\n<p>因此，PageRank的简单形式定义如下：</p>\n<blockquote>\n<p>当含有若干个节点的有向图是强连通且非周期性的有向图时，在其基础上定义的随机游走模型，即一阶马尔科夫链具有平稳分布，平稳分布向量称为这个有向图的PageRank。若矩阵M是马尔科夫链的转移矩阵，则向量R满足:\n<span class=\"math display\">\\[ MR = R \\]</span></p>\n</blockquote>\n<p>上图A、B、C、D四个网页的转移矩阵M如下:</p>\n<p><span class=\"math display\">\\[M=\\left[\\begin{array}{cccc}\n0 &amp; 1 / 2 &amp; 1 &amp; 0 \\\\\n1 / 3 &amp; 0 &amp; 0 &amp; 1 / 2 \\\\\n1 / 3 &amp; 0 &amp; 0 &amp; 1 / 2 \\\\\n1 / 3 &amp; 1 / 2 &amp; 0 &amp; 0\n\\end{array}\\right]\\]</span></p>\n<p>假设A、B、C、D四个页面的初始影响力是相同的，即<span\nclass=\"math inline\">\\(w_{0}^{T} =\n[1/4\\space1/4\\space1/4\\space1/4]\\)</span></p>\n<p>第一次转移后，各页面影响力<span\nclass=\"math inline\">\\(w_{1}\\)</span>变为:</p>\n<p><span class=\"math display\">\\[w_{1}=M w_{0}=\\left[\\begin{array}{cccc}\n0 &amp; 1 / 2 &amp; 1 &amp; 0 \\\\\n1 / 3 &amp; 0 &amp; 0 &amp; 1 / 2 \\\\\n1 / 3 &amp; 0 &amp; 0 &amp; 1 / 2 \\\\\n1 / 3 &amp; 1 / 2 &amp; 0 &amp; 0\n\\end{array}\\right]\\left[\\begin{array}{c}\n1 / 4 \\\\\n1 / 4 \\\\\n1 / 4 \\\\\n1 / 4\n\\end{array}\\right]=\\left[\\begin{array}{l}\n9 / 24 \\\\\n5 / 24 \\\\\n5 / 24 \\\\\n5 / 24\n\\end{array}\\right]\\]</span></p>\n<p>之后再用转移矩阵乘以<span\nclass=\"math inline\">\\(w_{1}\\)</span>得到<span\nclass=\"math inline\">\\(w_{2}\\)</span>，直到第n次迭代后<span\nclass=\"math inline\">\\(w_{n}\\)</span>收敛不再变化，上述例子，<span\nclass=\"math inline\">\\(w\\)</span>会收敛至[0.3333 0.2222 0.2222\n0.2222]，对应A、B、C、D的影响力</p>\n<h3 id=\"等级泄露和等级沉没\">等级泄露和等级沉没</h3>\n<ol type=\"1\">\n<li>等级泄露（Rank Leak):\n如果一个网页没有出链，就像是一个黑洞一样，吸收了其他网页的影响力而不释放，最终会导致其他网页的PR值为0，如下图所示:</li>\n</ol>\n<p><img src=\"https://images.bumpchicken.cn/img/20220509000856.png\" width=\"50%\" height=\"50%\"></p>\n<ol start=\"2\" type=\"1\">\n<li>等级沉没（Rank Sink):\n如果一个网页只有出链没有入链，计算过程迭代下来，会导致这个网页的PR值为0，入下图所示:</li>\n</ol>\n<p><img src=\"https://images.bumpchicken.cn/img/20220509001111.png\" width=\"50%\" height=\"50%\"></p>\n<h2 id=\"pagerank改进版\">PageRank改进版</h2>\n<p>为了解决简化模型中存在的等级泄露和等级沉没问题，拉里佩奇提出了PageRank的随机浏览模型。他假设了这样一个场景：</p>\n<blockquote>\n<p>用户并不都是按照跳转链接的方式来上网，还有一种可能是不论当前处于哪个页面，都有概率访问到其他任意页面，比如用户就是要直接输入网址访问其他页面，虽然这个概率比较小</p>\n</blockquote>\n<p>所以他定义了阻尼因子d，这个因子代表了用户按照跳转链接来上网的概率，通常可以取一个固定值0.85，而<span\nclass=\"math inline\">\\(1-d=0.15\\)</span>则代表了用户不是通过跳转链接的方式来访问网页的概率</p>\n<p>下式是PageRank计算影响力的改进公式:</p>\n<p><span class=\"math display\">\\[PR(u)=\\frac{1-d}{N}+d \\sum_{\\nu=B_{u}}\n\\frac{P R(v)}{L(v)}\\]</span></p>\n<p>其中，N为网页总数，这样我们有可以重新迭代网页的权重计算了，因为加入了阻尼因子d，一定程度上解决了等级泄露和等级沉没的问题</p>\n<p>同样地，定义概率转移矩阵M，则其一般公式如下:</p>\n<p><span class=\"math display\">\\[R=d M R+\\frac{1-d}{n}1\\]</span></p>\n<p>其中，<span\nclass=\"math inline\">\\(d(0&lt;=d&lt;=1)\\)</span>为阻尼因子，<span\nclass=\"math inline\">\\(1\\)</span>是所有分量为1的n维向量</p>\n<h2 id=\"pagerank-代码实现\">PageRank 代码实现</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> scipy.sparse <span class=\"keyword\">import</span> csc_matrix</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">pageRank</span>(<span class=\"params\">G, s=<span class=\"number\">.85</span>, maxerr=<span class=\"number\">.0001</span></span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Computes the pagerank for each of the n states</span></span><br><span class=\"line\"><span class=\"string\">    Parameters</span></span><br><span class=\"line\"><span class=\"string\">    ----------</span></span><br><span class=\"line\"><span class=\"string\">    G: matrix representing state transitions</span></span><br><span class=\"line\"><span class=\"string\">       Gij is a binary value representing a transition from state i to j.</span></span><br><span class=\"line\"><span class=\"string\">    s: probability of following a transition. 1-s probability of teleporting</span></span><br><span class=\"line\"><span class=\"string\">       to another state.</span></span><br><span class=\"line\"><span class=\"string\">    maxerr: if the sum of pageranks between iterations is bellow this we will</span></span><br><span class=\"line\"><span class=\"string\">            have converged.</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    n = G.shape[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"comment\"># transform G into markov matrix A</span></span><br><span class=\"line\">    A = csc_matrix(G, dtype=np.<span class=\"built_in\">float</span>)</span><br><span class=\"line\">    rsums = np.array(A.<span class=\"built_in\">sum</span>(<span class=\"number\">1</span>))[:, <span class=\"number\">0</span>]</span><br><span class=\"line\">    ri, ci = A.nonzero()</span><br><span class=\"line\">    A.data /= rsums[ri]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># bool array of sink states</span></span><br><span class=\"line\">    sink = rsums == <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Compute pagerank r until we converge</span></span><br><span class=\"line\">    ro, r = np.zeros(n), np.ones(n)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> np.<span class=\"built_in\">sum</span>(np.<span class=\"built_in\">abs</span>(r - ro)) &gt; maxerr:       <span class=\"comment\"># 迭代直至收敛</span></span><br><span class=\"line\">        ro = r.copy()</span><br><span class=\"line\">        <span class=\"comment\"># calculate each pagerank at a time</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, n):</span><br><span class=\"line\">            <span class=\"comment\"># inlinks of state i</span></span><br><span class=\"line\">            Ai = np.array(A[:, i].todense())[:, <span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># account for sink states</span></span><br><span class=\"line\">            Di = sink / <span class=\"built_in\">float</span>(n)</span><br><span class=\"line\">            <span class=\"comment\"># account for teleportation to state i</span></span><br><span class=\"line\">            Ei = np.ones(n) / <span class=\"built_in\">float</span>(n)</span><br><span class=\"line\">            r[i] = ro.dot(Ai * s + Di * s + Ei * (<span class=\"number\">1</span> - s))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># return normalized pagerank</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> r / <span class=\"built_in\">float</span>(<span class=\"built_in\">sum</span>(r))</span><br></pre></td></tr></table></figure>\n<p>使用示例： <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">G = np.array([[<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">              [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">              [<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">              [<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">              [<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>],</span><br><span class=\"line\">              [<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>],</span><br><span class=\"line\">              [<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(pageRank(G,s=<span class=\"number\">.86</span>))</span><br><span class=\"line\">--------------------</span><br><span class=\"line\">[<span class=\"number\">0.12727557</span> <span class=\"number\">0.03616954</span> <span class=\"number\">0.12221594</span> <span class=\"number\">0.22608452</span> <span class=\"number\">0.28934412</span> <span class=\"number\">0.03616954</span> <span class=\"number\">0.16274076</span>]</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考资料\">参考资料</h2>\n<p>1.https://www.cnblogs.com/jpcflyer/p/11180263.html</p>\n<p>2.<a\nhref=\"https://github.com/fengdu78/lihang-code/blob/master/%E7%AC%AC21%E7%AB%A0%20PageRank%E7%AE%97%E6%B3%95/21.PageRank.ipynb\">PageRank\nnotebook</a></p>\n<h2 id=\"其他\">其他</h2>\n<p>一些相似算法或改进的算法</p>\n<p>1.LeaderRank</p>\n<p>2.Hilltop算法</p>\n<p>3.ExpertRank</p>\n<p>4.HITS</p>\n<p>5.TrustRank</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cl2xj61em000198udb6uheb43","category_id":"cl2xj61ep000298ud0oqz0vsn","_id":"cl2xj61eq000598udbtfm1vx4"},{"post_id":"cl2xj61er000698ud0czc74xy","category_id":"cl2xj61et000a98udbr7gcbvj","_id":"cl2xj61eu000f98ud2oieeky6"},{"post_id":"cl2xj61es000898udefb2dn80","category_id":"cl2xj61eu000c98ud1gtmc0th","_id":"cl2xj61ev000h98udhdx02037"}],"PostTag":[{"post_id":"cl2xj61em000198udb6uheb43","tag_id":"cl2xj61eq000398ud3wp274qw","_id":"cl2xj61eq000498udb16v7tuq"},{"post_id":"cl2xj61er000698ud0czc74xy","tag_id":"cl2xj61eu000b98ud2r9j1hra","_id":"cl2xj61eu000e98ud9yru8h75"},{"post_id":"cl2xj61es000898udefb2dn80","tag_id":"cl2xj61eu000d98ud2dk04xfy","_id":"cl2xj61ev000g98udcsbe0l1e"}],"Tag":[{"name":"异常检测","_id":"cl2xj61eq000398ud3wp274qw"},{"name":"聚类","_id":"cl2xj61eu000b98ud2r9j1hra"},{"name":"排序","_id":"cl2xj61eu000d98ud2dk04xfy"}]}}